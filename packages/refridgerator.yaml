################################################################
## Packages / Refrigerator
################################################################

################################################################
## Automations
################################################################
automation:
  # Alert when House Refrigerator or Freezer is too hot
  - alias: "House Refrigerator too Hot!"
    trigger:
      - platform: state
        entity_id: binary_sensor.house_fridge_monitor_alarm
        from: "off"
        to: "on"
      - platform: state
        entity_id: input_boolean.test_alerts
        from: "off"
        to: "on"
    action:
      - service: notify.house_alerts
        data_template:
          title: "House Refrigerator Alarm"
          message: "Temperature too high!\nFridge is {{ states('sensor.house_fridge_temperature') | round(1) }}{{ state_attr('sensor.house_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.house_freezer_temperature') | round(1) }}{{ state_attr('sensor.house_freezer_temperature', 'unit_of_measurement') }}"
          data:
            push:
              category: fridge_alarm
            action_data:
              device_name: "House Refrigerator"
              silence_entity_id: "switch.house_fridge_monitor_alarm_disable"
      - service: persistent_notification.create
        data_template:
          title: "House Refrigerator Alarm"
          message: "Temperature too high!\nFridge is {{ states('sensor.house_fridge_temperature') | round(1) }}{{ state_attr('sensor.house_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.house_freezer_temperature') | round(1) }}{{ state_attr('sensor.house_freezer_temperature', 'unit_of_measurement') }}"

  # Alert when House Refrigerator or Freezer temperature is back to normal
  - alias: "House Refrigerator back to normal"
    trigger:
      - platform: state
        entity_id: binary_sensor.house_fridge_monitor_alarm
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: notify.house_alerts
        data_template:
          title: "House Refrigerator Status Good"
          message: "Temperature back to normal.\nFridge is {{ states('sensor.house_fridge_temperature') | round(1) }}{{ state_attr('sensor.house_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.house_freezer_temperature') | round(1) }}{{ state_attr('sensor.house_freezer_temperature', 'unit_of_measurement') }}"
      - service: persistent_notification.create
        data_template:
          title: "House Refrigerator Status Good"
          message: "Temperature back to normal.\nFridge is {{ states('sensor.house_fridge_temperature') | round(1) }}{{ state_attr('sensor.house_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.house_freezer_temperature') | round(1) }}{{ state_attr('sensor.house_freezer_temperature', 'unit_of_measurement') }}"

  # Alert when Studio Refrigerator or Freezer is too hot
  - alias: "Studio Refrigerator too Hot!"
    trigger:
      - platform: state
        entity_id: binary_sensor.studio_fridge_monitor_alarm
        from: "off"
        to: "on"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'off'
      #   to: 'on'
    action:
      - service: notify.house_alerts
        data_template:
          title: "Studio Refrigerator Alarm"
          message: "Temperature too high!\nFridge is {{ states('sensor.studio_fridge_temperature') | round(1) }}{{ state_attr('sensor.studio_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.studio_freezer_temperature') | round(1) }}{{ state_attr('sensor.studio_freezer_temperature', 'unit_of_measurement') }}"
          data:
            push:
              category: fridge_alarm
            action_data:
              device_name: "Studio Refrigerator"
              silence_entity_id: "switch.studio_fridge_monitor_alarm_disable"
      - service: persistent_notification.create
        data_template:
          title: "Studio Refrigerator Alarm"
          message: "Temperature too high!\nFridge is {{ states('sensor.studio_fridge_temperature') | round(1) }}{{ state_attr('sensor.studio_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.studio_freezer_temperature') | round(1) }}{{ state_attr('sensor.studio_freezer_temperature', 'unit_of_measurement') }}"

  # Alert when Studio Refrigerator or Freezer temperature is back to normal
  - alias: "Studio Refrigerator back to normal"
    trigger:
      - platform: state
        entity_id: binary_sensor.studio_fridge_monitor_alarm
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: notify.house_alerts
        data_template:
          title: "Studio Refrigerator Status Good"
          message: "Temperature back to normal.\nFridge is {{ states('sensor.studio_fridge_temperature') | round(1) }}{{ state_attr('sensor.studio_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.studio_freezer_temperature') | round(1) }}{{ state_attr('sensor.studio_freezer_temperature', 'unit_of_measurement') }}"
      - service: persistent_notification.create
        data_template:
          title: "Studio Refrigerator Status Good"
          message: "Temperature back to normal.\nFridge is {{ states('sensor.house_fridge_temperature') | round(1) }}{{ state_attr('sensor.house_fridge_temperature', 'unit_of_measurement') }}, Freezer is {{ states('sensor.house_freezer_temperature') | round(1) }}{{ state_attr('sensor.house_freezer_temperature', 'unit_of_measurement') }}"

  # Alert when Garage Freezer is too hot
  - alias: "Garage Freezer too Hot!"
    trigger:
      - platform: state
        entity_id: binary_sensor.garage_freezer_monitor_alarm
        from: "off"
        to: "on"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'off'
      #   to: 'on'
    action:
      - service: notify.house_alerts
        data_template:
          title: "Garage Freezer Alarm"
          message: "Temperature too high!\nFreezer is {{ states('sensor.garage_freezer_temperature') | round(1) }}{{ state_attr('sensor.garage_freezer_temperature', 'unit_of_measurement') }}"
          data:
            push:
              category: fridge_alarm
            action_data:
              device_name: "Garage Freezer"
              silence_entity_id: "switch.garage_freezer_monitor_alarm_disable"
      - service: persistent_notification.create
        data_template:
          title: "Garage Refrigerator Alarm"
          message: "Temperature too high!\nFreezer is {{ states('sensor.garage_freezer_temperature') | round(1) }}{{ state_attr('sensor.garage_freezer_temperature', 'unit_of_measurement') }}"

  # Alert when Garage Freezer temperature is back to normal
  - alias: "Garage Freezer back to normal"
    trigger:
      - platform: state
        entity_id: binary_sensor.garage_freezer_monitor_alarm
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: notify.house_alerts
        data_template:
          title: "Garage Freezer Status Good"
          message: "Temperature back to normal.\nFreezer is {{ states('sensor.garage_freezer_temperature') | round(1) }}{{ state_attr('sensor.garage_freezer_temperature', 'unit_of_measurement') }}"
      - service: persistent_notification.create
        data_template:
          title: "Garage Freezer Status Good"
          message: "Temperature back to normal.\nFreezer is {{ states('sensor.garage_freezer_temperature') | round(1) }}{{ state_attr('sensor.garage_freezer_temperature', 'unit_of_measurement') }}"
