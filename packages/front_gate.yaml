################################################################
## Packages / Front Gate Controller
################################################################

################################################################
## Customize
################################################################
homeassistant:
  customize:
    ################################################
    ## Cover
    ################################################
    cover.front_gate:
      friendly_name: "Front Gate"
      device_class: garage

################################################################
## Binary Sensor
################################################################
binary_sensor:
  - platform: template
    sensors:
      # Turns on when Septic Controller is Offline for too long
      front_gate_offline:
        friendly_name: "Front Gate Offline"
        delay_on: "00:15:00"
        value_template: "{{ is_state('cover.front_gate', 'unavailable') }}"

################################################################
## Automation
################################################################
automation:
  # Front Gate Opened Say in House
  - id: front_gate_opened_house
    alias: "Front Gate Opened House"
    trigger:
      platform: state
      entity_id: cover.front_gate
      to: "open"
    action:
      - service: script.sonos_house_all_say
        data:
          volume: 0.5
          delay: "00:00:02"
          message: "Front Gate Open."

  # Front Gate Opened Say in Studio
  - id: front_gate_opened_studio
    alias: "Front Gate Opened Studio"
    trigger:
      platform: state
      entity_id: cover.front_gate
      to: "open"
    condition:
      condition: and
      conditions:
        # Art Mode must be off to say anything
        - condition: state
          entity_id: input_boolean.art_mode
          state: "off"
        - condition: or
          conditions:
            # if guest mode is disabled always speak
            - condition: state
              entity_id: input_boolean.guest_mode
              state: "off"
              # if guest mode is enabled don't speak when guests might be sleeping
            - condition: and
              conditions:
                # guest mode enabled
                - condition: state
                  entity_id: input_boolean.guest_mode
                  state: "on"
                # before 9PM
                - condition: time
                  before: "21:00:00"
                # after 9AM
                - condition: time
                  after: "9:00:00"
    action:
      - service: script.sonos_studio_all_say
        data:
          volume: 0.5
          delay: "00:00:02"
          message: "Front Gate Open."

  # Front Gate Open too long
  - id: front_gate_open_too_long
    alias: "Front Gate Open too Long"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_gate_open_too_long
        from: "off"
        to: "on"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: script.sonos_all_say
        data:
          volume: 0.8
          delay: "00:00:03"
          message: "Front Gate Open Too Long."
      - service: notify.sensor_alerts
        data_template:
          title: "Front Gate Alarm"
          message: "Front gate has been open too long!"
      - service: persistent_notification.create
        data_template:
          title: "Front Gate Alarm"
          message: "Front gate has been open too long!"

  # Alert when Front Gate closes after being open too long
  - alias: "Front Gate closed after being open too long"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_gate_open_too_long
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: script.sonos_all_say
        data:
          volume: 0.8
          delay: "00:00:03"
          message: "Front Gate Closed."
      - service: notify.sensor_alerts
        data_template:
          title: "Front Gate Status Good"
          message: "Front gate closed."
      - service: persistent_notification.create
        data_template:
          title: "Front Gate Status Good"
          message: "Front gate closed."

  # Alert when Front Gate Controller goes offline
  - alias: "Front Gate Controller Offline"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_gate_offline
        from: "off"
        to: "on"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'off'
      #   to: 'on'
    action:
      - service: notify.sensor_alerts
        data_template:
          title: "Front Gate Alarm"
          message: "Front gate controller is offline!"
      - service: persistent_notification.create
        data_template:
          title: "Front Gate Alarm"
          message: "Front gate controller is offline!"

  # Alert when Front Gate Controller is back online
  - alias: "Front Gate Controller Online"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_gate_offline
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: input_boolean.test_alerts
      #   from: 'on'
      #   to: 'off'
    action:
      - service: notify.sensor_alerts
        data_template:
          title: "Front Gate Status Good"
          message: "Front gate controller is back online."
      - service: persistent_notification.create
        data_template:
          title: "Front Gate Status Good"
          message: "Front gate controller is back online."
